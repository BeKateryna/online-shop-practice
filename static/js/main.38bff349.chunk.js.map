{"version":3,"sources":["assets/icons/star-1.svg","assets/icons/star-2.svg","components/NavMenu/NavMenu.js","components/Header/Header.js","store/items/itemsAction.js","store/items/actionsTypesItems.js","components/Button/Button.js","store/modal/modalActions.js","store/modal/actionsTypeModal.js","components/Modal/Modal.js","components/Item/Item.js","components/ItemList/ItemList.js","components/EmptyInfo/EmptyInfo.js","pages/Favorites/Favorites.js","components/OrderForm/OrderForm.js","pages/Basket/Basket.js","pages/MainPage/MainPage.js","routes/AppRoutes.js","App.js","serviceWorker.js","store/modal/madalReducer.js","store/rootReducer.js","store/items/itemsReducer.js","store/title/titleReduser.js","store/configStore.js","index.js"],"names":["module","exports","NavMenu","className","activeClassName","to","Header","getProducts","dispatch","fetch","then","res","json","data","type","payload","catch","error","Button","text","backgroundColor","modal","id","style","useDispatch","data-testid","onClick","e","console","log","isActive","target","localStorage","removeItem","removeFromBasket","setItem","addToBasket","defaultProps","connect","Modal","header","body","closeBtn","actions","closeFn","Item","product","add","remove","name","color","article","href","src","url","alt","price","getItem","starOne","starTwo","key","products","addToFavorites","removeFromFavorites","ItemList","props","basketProducts","favoritesProduct","map","length","state","items","EmptyInfo","Favorites","filter","nameRegExp","formSchema","yup","shape","firstname","required","matches","max","lastname","age","min","address","phone","FullOrderForm","totalPrice","forEach","initialValues","validationSchema","onSubmit","values","setSubmitting","ids","items_ids","formikProps","handleSubmit","noValidate","component","placeholder","disabled","isSubmitting","Basket","title","store","AppRoutes","exact","path","render","getItems","useEffect","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","inFavorites","inBasket","devTools","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","compose","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.38bff349.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star-1.afce843d.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-2.ca05b033.svg\";","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport \"./NavMenu.scss\"\n\nconst NavMenu = () =>  {\n    return (\n        <ul className='nav__menu'>\n            <li className='nav__item'>\n                <NavLink  activeClassName='active' to='/MainPage'>All Products</NavLink>\n            </li>\n            <li className='nav__item'>\n                <NavLink to='/favorites'>Favorites</NavLink>\n            </li>\n            <li className='nav__item'>\n                <NavLink  activeClassName='active' to='/basket'>Your Basket</NavLink>\n            </li>\n        </ul>\n    );\n}\n\nexport default NavMenu;","import React from 'react';\nimport NavMenu from \"../NavMenu/NavMenu\";\nimport './Header.scss'\n\nconst  Header =()=>  {\n    return (\n        <div className='header'>\n            <NavMenu />\n        </div>\n    );\n}\n\nexport default Header;","import {GET_ITEMS, GET_ITEMS_ERROR} from \"./actionsTypesItems\";\n\nexport const ADD_FAVORITES = 'ADD_FAVORITES';\nexport const REMOVE_FROM_FAVORITES = 'REMOVE_FROM_FAVORITES';\nexport const ADD_TO_BASKET = 'ADD_TO_BASKET';\nexport const REMOVE_FROM_BASKET = 'REMOVE_FROM_BASKET';\nexport const DELETE_FROM_LOCAL = 'DELETE_FROM_LOCAL'\n\n\nexport const getProducts = () => (dispatch) => {\n    fetch('./items.json')\n        .then(res => res.json())\n        .then(data =>\n            dispatch({type: GET_ITEMS, payload: data})\n        )\n        .catch(error => {\n            dispatch({type: GET_ITEMS_ERROR, error})\n        })\n}\n\nexport const addToFavorites = (id) => (dispatch) => {\n    dispatch({type: ADD_FAVORITES, payload: id});\n    localStorage.setItem(`favorites-${id}`, true);\n}\n\nexport const removeFromFavorites = (id) => (dispatch) => {\n    dispatch({type: REMOVE_FROM_FAVORITES, payload: id});\n    localStorage.removeItem(`favorites-${id}`)\n}\n\nexport const addToBasket = (id) => (dispatch) => {\n    dispatch({type: ADD_TO_BASKET, payload: id});\n    localStorage.setItem(`basket-${id}`, true)\n}\n\nexport const removeFromBasket = (id) => (dispatch) => {\n    dispatch({type: REMOVE_FROM_BASKET, payload: id});\n    localStorage.removeItem(`basket-${id}`)\n}\n\nexport const removeFromStorage = (ids) => (dispatch) => {\n    ids.forEach( e => localStorage.removeItem(`basket-${e}`))\n    dispatch(getProducts())\n}","export const GET_ITEMS = 'GET_ITEMS';\nexport const GET_ITEMS_ERROR = 'GET_ITEMS_ERROR';","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\nimport {connect, useDispatch} from 'react-redux'\nimport {addToBasket, removeFromBasket} from \"../../store/items/itemsAction\";\nimport {closeModal, openModal} from \"../../store/modal/modalActions\"\n\n export const Button = ({text, backgroundColor, modal, id, className} ) => {\n    const style = {backgroundColor: backgroundColor}\n    const dispatch = useDispatch();\n\n    return (\n        <button data-testid=\"ok-btn\"\n            onClick={(e) => {\n                console.log(modal.isActive)\n               if ( e.target.className === \"buttons__btn_remove\" && !modal.isActive) {\n                   modal.type = 'close-modal'\n                   dispatch(openModal())\n                   dispatch(removeFromBasket(id))\n\n               }\n               if (modal.isActive) {\n                   dispatch(closeModal())\n               }\n               if (!modal.isActive && e.target.className === \"buttons__btn\" ) {\n                   modal.type = 'modal-success'\n                    dispatch(openModal())\n                   dispatch(addToBasket(id))\n            }\n        }}\n            className={\"buttons__btn\" + className}\n            style={style}>{text}</button>\n    );\n}\nButton.propTypes = {\n    backgroundColor: PropTypes.string,\n    text: PropTypes.string,\n    modal: PropTypes.object.isRequired,\n    id: PropTypes.string,\n    className: PropTypes.string\n};\nButton.defaultProps = {\n    backgroundColor: 'transparent',\n    id: \"\",\n    className: ''\n}\nconst mapStoreToProps = ({modal}) => ({modal});\n\nexport default connect(mapStoreToProps)(Button);\n\n","\nimport {CLOSE_MODAL, OPEN_MODAL} from \"./actionsTypeModal\";\n\nexport const openModal = () => (dispatch) => {\n    dispatch({type: OPEN_MODAL});\n}\n\nexport const closeModal = () => (dispatch) => {\n    dispatch({type: CLOSE_MODAL});\n}","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.scss';\nimport Button from \"../Button/Button\";\nimport {closeModal} from \"../../store/modal/modalActions\";\nimport {connect} from 'react-redux';\n\n\nexport const Modal = ({header, body, closeBtn, actions, type,  closeFn}) => {\n    return (\n            <>\n                <div className={type}>\n                    <div className={type + '__header'}>\n                        <h2 className={type + '__header__title'} data-testid=\"header\">{header}</h2>\n                        {closeBtn && <Button className=\" close-btn\" text='x'/>}\n                    </div>\n                    <div className={type + '__text'}>\n                        <p>{body}</p>\n                    </div>\n                    <div className={type + '__footer'}>\n                        {actions}\n                    </div>\n                </div>\n                <div className=\"shadow\" onClick={() => closeFn()} />\n            </>\n        );\n\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n        closeFn: () => dispatch(closeModal()),\n});\n\n\nModal.propTypes = {\n    header: PropTypes.string,\n    closeBtn: PropTypes.bool,\n    body: PropTypes.string,\n    actions: PropTypes.array,\n    type: PropTypes.string\n}\nModal.defaultProps = {\n    header: \"\",\n    closeBtn: false,\n    body: '',\n    actions: [],\n    type: ''\n}\nexport default connect(mapDispatchToProps)(Modal);","import React from 'react';\nimport './Item.scss';\nimport starOne from \"./../../assets/icons/star-1.svg\"\nimport starTwo from \"./../../assets/icons/star-2.svg\"\nimport Button from \"../Button/Button\";\nimport Modal from \"../Modal/Modal\";\nimport {connect} from 'react-redux';\nimport {addToFavorites, removeFromFavorites} from '../../store/items/itemsAction';\nimport PropTypes from \"prop-types\";\n\n\n\nconst Item = ({product, modal, add, remove} ) => {\n\n    return (\n        <div>\n            <div className=\"card__body\">\n                <div className=\"card__header\">\n                    <h2 className='card__title'>{product.name}</h2>\n                </div>\n                <div>Color : {product.color}</div>\n                <div>Article: {product.article}</div>\n                <a className=\"card__pic\" href=\"/\"><img src={product.url} alt=\"product\"/></a>\n                <div className=\"card__info\">\n                    <div className=\"card__price\">\n                        {product.price} грн\n                    </div>\n                    {!localStorage.getItem(`favorites-${product.article}`) &&\n                    <div onClick={() => add(product.article)}>Add to Favorite<img className=\"card__star\" src={starOne}\n                                                                                  alt=\"star\"/></div>}\n                    {localStorage.getItem(`favorites-${product.article}`) &&\n                    <div onClick={() => remove(product.article)}>Remove to Favorite<img className=\"card__star\"\n                                                                                        src={starTwo} alt=\"star\"/>\n                    </div>}\n                </div>\n                <div>\n                    {localStorage.getItem(`basket-${product.article}`)\n                        ? <Button text='Remove' backgroundColor='black' id={product.article} className='_remove'/>\n                        : <Button text='Add to card' backgroundColor='black' id={product.article} />}\n                </div>\n            </div>\n            {modal.isActive && modal.type === 'modal-success' && <Modal\n                header='Congratulations!'\n                body=\"This bottle was added to your basket.\"\n                actions={[<Button\n                    key={0}\n                    text='OK'\n                    backgroundColor='green'\n                />]}\n                closeBtn={true}\n                type={modal.type}\n            />}\n            {modal.isActive && modal.type === 'close-modal' && <Modal\n                header='Removed'\n                body=\"This bottle has been removed from your basket !\"\n                actions={[<Button\n                    key={1}\n                    text='OK'\n                    backgroundColor='red'\n                />]}\n                closeBtn={true}\n                type={modal.type}\n            />}\n        </div>\n    );\n}\n\n\nItem.propTypes = {\n    products: PropTypes.array,\n    modal: PropTypes.object.isRequired,\n    add: PropTypes.func.isRequired,\n    remove: PropTypes.func.isRequired\n};\nItem.defaultProps = {\n    products: []\n}\n\nconst mapStoreToProps = ({modal}) => ({modal})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        add: (id) => dispatch(addToFavorites(id)),\n        remove: (id) => dispatch(removeFromFavorites(id))\n    }\n};\n\n\nexport default connect(mapStoreToProps, mapDispatchToProps)(Item);","import React from 'react';\nimport Item from '../Item/Item';\nimport './ItemList.scss';\nimport PropTypes from \"prop-types\";\nimport {connect} from 'react-redux'\n\nconst ItemList = (props) => {\n    const {products=[],basketProducts=[], favoritesProduct=[]} = props;\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <div className='card__all'>\n                    {basketProducts && basketProducts.map(e => <Item product={e} key={e.article}  />)}\n                    {favoritesProduct && favoritesProduct.map(e => <Item product={e} key={e.article}  />)}\n                    {basketProducts.length < 1 && favoritesProduct.length < 1 && products.map(e => <Item product={e} key={e.article}  />)}\n                </div>\n            </div>\n        </>\n    );\n}\n\nItemList.propTypes = {\n    products: PropTypes.array,\n    basketProducts: PropTypes.array.isRequired,\n    favoritesProduct: PropTypes.array\n    };\nItemList.defaultProps = {\n    products: [],\n    favoritesProduct: [],\n    basketProducts: []\n}\n\nconst mapStoreToProps = (state) => ({\n    products: state.items.data,\n})\n\nexport default connect(mapStoreToProps)(ItemList);","import React from 'react';\nimport \"./EmptyInfo.scss\"\n\nconst EmptyInfo = () => {\n    return (\n        <span className=\"empty_info\">No items have been added...(</span>\n    );\n}\n\nexport default EmptyInfo","import React from 'react';\nimport ItemList from \"../../components/ItemList/ItemList\";\nimport './Favorites.scss'\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport EmptyInfo from \"../../components/EmptyInfo/EmptyInfo\";\n\nconst Favorites = (props) => {\n    const {products} = props\n    const favoritesProduct = products.filter(e => localStorage.getItem(`favorites-${e.article}`))\n    return (\n        <div>\n            <h2 className='title'>Favorites</h2>\n            {favoritesProduct.length > 0 && <ItemList favoritesProduct={favoritesProduct}/>}\n            {favoritesProduct.length < 1 && <EmptyInfo />}\n        </div>\n    );\n}\n\nFavorites.propTypes = {\n    products: PropTypes.array\n};\nFavorites.defaultProps = {\n    products: [],\n}\n\nconst mapStoreToProps = (state) => ({\n    products: state.items.data\n})\nexport default connect(mapStoreToProps)(Favorites);","import React from 'react';\nimport './OrderForm.scss'\nimport {connect} from \"react-redux\";\nimport {removeFromStorage} from \"../../store/items/itemsAction\";\nimport {openModal} from \"../../store/modal/modalActions\"\nimport {Form, Field, Formik, ErrorMessage} from \"formik\";\nimport * as yup from 'yup';\n\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\nconst nameRegExp = /^[a-z ,.'-]+$/i\n\n\nconst formSchema = yup.object().shape({\n    firstname: yup\n        .string()\n        .required(\"This field is required\")\n        .matches(nameRegExp, 'First name is invalid')\n        .max(15, 'First name must be shorter then 15 symbols'),\n    lastname: yup\n        .string()\n        .required(\"This field is required\")\n        .matches(nameRegExp, 'Last name is invalid')\n        .max(15, 'Last name must be shorter then 15 symbols'),\n    age: yup\n        .number()\n        .min(18, 'You must be over 18 years old')\n        .max(100, \"Please enter a correct age\")\n        .required(\"This field is required\"),\n    address: yup\n        .string()\n        .required(\"This field is required\"),\n    phone: yup\n        .string()\n        .matches(phoneRegExp, 'Phone number is not valid')\n        .required(\"This field is required\"),\n})\n\n\nlet FormikForm = (props) => {\n\n    const {products, dispatch} = props;\n    console.log(props);\n\n\n    const handleSubmit = (values, {props, setSubmitting}) => {\n        console.log(values, products);\n\n        let items_ids = products.map(e => e.article)\n       dispatch(removeFromStorage(items_ids))\n        setSubmitting(false)\n        dispatch(openModal())\n    }\n\n    let totalPrice = 0;\n    products.forEach(e => totalPrice += +e.price)\n\n\n    return (\n        <Formik\n            initialValues={{\n                firstname: '',\n                lastname: '',\n                age: '',\n                address: '',\n                phone: ''\n            }}\n            validationSchema={formSchema}\n            onSubmit={handleSubmit}\n        >\n\n        {(formikProps) => {\n                // console.log('Formik props', formikProps)\n\n            return (\n                    <Form onSubmit={formikProps.handleSubmit} className='order-form' noValidate>\n                        <Field component='input'\n                               className='order-form'\n                               type='text'\n                               name='firstname'\n                               placeholder='Your first name'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='firstname' /></span>\n                        <Field component='input'\n                               className='order-form'\n                               type='text'\n                               name='lastname'\n                               placeholder='Your last name'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='lastname' /></span>\n                        <Field component='input'\n                               className='order-form'\n                               type='text'\n                               name='age'\n                               placeholder='Your age'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='age' /></span>\n                        <Field component='input'\n                               className='order-form'\n                               type='text'\n                               name='address'\n                               placeholder='Delivery address'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='address' /></span>\n                        <Field component='input'\n                               className='order-form'\n                               type='number'\n                               name='phone'\n                               placeholder='Phone number'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='phone' /></span>\n                        <span className='item-info'>Amount: {products.length} bottle(s)</span>\n                        <span className='item-info'>Total: {totalPrice} грн</span>\n                        <button className='btn__checkout' type='submit' disabled={formikProps.isSubmitting}>Checkout</button>\n                    </Form>\n                );\n            }}\n        </Formik>\n    )\n}\n\nlet FullOrderForm = connect()(FormikForm)\n\nexport default FullOrderForm;","import React from 'react';\nimport ItemList from \"../../components/ItemList/ItemList\";\nimport './Basket.scss'\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport EmptyInfo from \"../../components/EmptyInfo/EmptyInfo\";\nimport Modal from \"../../components/Modal/Modal\";\nimport Button from \"../../components/Button/Button\";\nimport FullOrderForm from \"../../components/OrderForm/OrderForm\";\n\n\nconst Basket = (props) => {\n\n    const {products, modal} = props;\n\n    const basketProducts = products.filter(e => localStorage.getItem(`basket-${e.article}`))\n    return (\n        <div className='basket__container'>\n            <div>\n            <h2 className='title'>Basket</h2>\n            {basketProducts.length < 1 && <EmptyInfo/>}\n            {basketProducts.length > 0 && <ItemList basketProducts={basketProducts}/>}\n            </div>\n            {basketProducts.length > 0 &&\n            <div className='form__container'>\n                <h2>***Fill the Order Form***</h2>\n                <FullOrderForm products={basketProducts} />\n            </div>}\n            {modal.isActive && modal.type === 'modal-success' && <Modal\n                title='Success'\n                body='Your order is confirmed! Please, wait for manager call.'\n                actions={[<Button\n                    key={0}\n                    text='OK'\n                    backgroundColor='#00000030'\n                />]}\n                closeBtn={true}\n                type={modal.type}\n            />}\n            {modal.isActive && modal.type === 'modal-success' && <Modal\n                title='Success'\n                body='Your order is confirmed! Please, wait for manager call.'\n                actions={[<Button\n                    key={0}\n                    text='OK'\n                    backgroundColor='#00000030'\n                />]}\n                closeBtn={true}\n                type={modal.type}\n            />}\n            {modal.isActive && modal.type === 'close-modal' && <Modal\n                header='Removed'\n                body=\"This bottle has been removed from your basket !\"\n                actions={[<Button\n                    key={1}\n                    text='OK'\n                    backgroundColor='red'\n                />]}\n                closeBtn={true}\n                type={modal.type}\n            />}\n        </div>\n    );\n\n}\n\nBasket.propTypes = {\n    products: PropTypes.array,\n    modal: PropTypes.object.isRequired\n};\nBasket.defaultProps = {\n    products: [],\n}\n\nconst mapStoreToProps = (state) => ({\n    products: state.items.data,\n    modal:state.modal\n})\n\nexport default connect(mapStoreToProps)(Basket);","import React from 'react';\nimport ItemList from \"../../components/ItemList/ItemList\";\nimport \"./MainPage.scss\";\nimport {connect} from 'react-redux';\n\nconst MainPage = (props) => {\n    const {title} = props;\n    return (\n        <>\n            <h2 className='header__title'>{title}</h2>\n            <ItemList />\n        </>\n    );\n}\nconst mapStoreToProps = store=> store.title;\n\nexport default connect(mapStoreToProps)(MainPage);\n","import React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport Favorites from \"../pages/Favorites/Favorites\";\nimport Basket from \"../pages/Basket/Basket\"\nimport MainPage from \"../pages/MainPage/MainPage\";\n\nconst AppRoutes = () => {\n    return (\n            <Switch>\n                <Route exact path='/' render={() => <Redirect to='/MainPage' />}/>\n                <Route exact path='/favorites' render={() => <Favorites />}/>\n                <Route exact path='/basket' render={() => <Basket />}/>\n                <Route exact path='/MainPage' render={() => <MainPage />}/>\n            </Switch>\n    );\n}\n\nexport default AppRoutes;\n","import React, {useEffect} from 'react';\nimport Header from \"./components/Header/Header\"\nimport AppRoutes from \"./routes/AppRoutes\";\nimport {getProducts} from \"./store/items/itemsAction\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n\n\nconst App = ({getItems}) => {\n\n    useEffect(() => {\n        getItems()\n    }, [getItems])\n\n    return (\n        <>\n            <Header/>\n            <AppRoutes/>\n        </>\n    );\n}\n\nApp.propTypes = {\n    getItems: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    getItems: () => dispatch(getProducts())\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {CLOSE_MODAL, OPEN_MODAL} from \"./actionsTypeModal\";\n\nconst initialState = {\n    // type: 'modal-success',\n    isActive: false\n}\n\nexport function modalReducer(state = initialState, action) {\n    switch (action.type) {\n        case OPEN_MODAL:\n            return {\n                ...state,\n                isActive: true\n            }\n        case CLOSE_MODAL:\n            return {\n                ...state,\n                isActive: false\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport {itemsReducer} from \"./items/itemsReducer\";\nimport {modalReducer} from \"./modal/madalReducer\";\nimport {titleReducer} from \"./title/titleReduser\";\n\n\n\nexport const rootReducer = combineReducers({\n    modal:modalReducer,\n    items: itemsReducer,\n    title: titleReducer,\n})","\nimport {ADD_FAVORITES, REMOVE_FROM_FAVORITES, REMOVE_FROM_BASKET, ADD_TO_BASKET, DELETE_FROM_LOCAL} from \"./itemsAction\"\nimport {GET_ITEMS} from \"./actionsTypesItems\"\n\nexport function itemsReducer (state = [], action) {\n    switch (action.type) {\n        case GET_ITEMS:\n            return {...state, data: action.payload}\n\n        case ADD_FAVORITES:\n            localStorage.setItem(`favorites-${action.payload}`, 'true')\n            return {\n                ...state,\n                data: state.data.map(e => {\n                    return e.article === action.payload\n                        ? {\n                            ...e,\n                            inFavorites: true,\n                        }\n                        : e\n                })\n            }\n\n        case REMOVE_FROM_FAVORITES:\n            localStorage.removeItem(`favorites-${action.payload}`)\n            return {\n                ...state,\n                data: state.data.map(e => {\n                    return e.article === action.payload\n                        ? {\n                            ...e,\n                            inFavorites: false,\n                        }\n                        : e\n                })\n            }\n        case ADD_TO_BASKET:\n            localStorage.setItem(`basket-${action.payload}`, 'true')\n            return {\n                ...state,\n                data: state.data.map(e => {\n                    return e.article === action.payload\n                        ? {\n                            ...e,\n                            inBasket: true,\n                        }\n                        : e\n                })\n            }\n        case REMOVE_FROM_BASKET:\n            localStorage.removeItem(`basket-${action.payload}`)\n            return {\n                ...state,\n                data: state.data.map(e => {\n                    return e.article === action.payload\n                        ? {\n                            ...e,\n                            inBasket: false,\n                        }\n                        : e\n                })\n            }\n        case DELETE_FROM_LOCAL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n}","\nexport function titleReducer (state = {title: \"Our Products\"}, action) {\n    return state\n}\n","import {applyMiddleware, compose, createStore} from \"redux\";\nimport {rootReducer} from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f => f);\n\nexport const store = createStore(\n    rootReducer,\n    compose(applyMiddleware(thunk),devTools)\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport {store} from \"./store/configStore\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}